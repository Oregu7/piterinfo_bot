const Markup = require("telegraf/markup");
const Actions = require("config").get("actions");
const { createMessage, simplePaginator } = require("./helpers");

exports.main = (ctx) => {
    const message = `üèõÔ∏è –ú—É–∑–µ–∏\n
    –ú—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–ª–∏ –¥–ª—è –≤–∞—Å –ø–æ–¥–±–æ—Ä–∫—É –ª—É—á—à–∏—Ö –º—É–∑–µ–µ–≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–µ–±—É—Ä–≥–∞. –ï—Å–ª–∏ –≤—ã –Ω–µ –Ω–∞—à–ª–∏ —Å–≤–æ–π –ª—é–±–∏–º—ã–π –º—É–∑–µ–π, –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–º.`;
    const buttons = [
        ["üìä –¢–æ–ø –º—É–∑–µ–µ–≤", "‚úçÔ∏è –î–æ–±–∞–≤–∏—Ç—å –º—É–∑–µ–π"],
        [Markup.locationRequestButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é")],
        ["üîô –ù–∞–∑–∞–¥"],
    ];

    return createMessage(message, buttons, { keyboardType: "keyboard" });
};

exports.baseList = (ctx, museum, paginationData, buildingsCount = 0) => {
    const message = `<b>${museum.name}</b>\n\n${museum.description}`;
    const paginator = simplePaginator(Actions.museumList, paginationData);
    const buttons = [
        [Markup.callbackButton("üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ", "4"), Markup.callbackButton("üñºÔ∏è –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", "3")],
        [Markup.callbackButton("üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å", "5"), Markup.callbackButton("‚è±Ô∏è –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã", "1")],
        [Markup.callbackButton("üåê –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è?", Actions.museumAddress.callback(museum.id))],
        [
            paginator.backButton,
            Markup.callbackButton(`${paginationData.page} –∏–∑ ${paginationData.count}`, "2"),
            paginator.nextButton,
        ],
    ];
    // —É –º—É–∑–µ—è –µ—Å—Ç—å –¥–æ–ø.–∫–æ—Ä–ø—É—Å–∞
    if (buildingsCount)
        buttons.unshift([Markup.callbackButton(`üèòÔ∏è –ö–æ—Ä–ø—É—Å–∞ (${buildingsCount})`, Actions.museumSubList.callback(1, museum.id, paginationData.page))]);

    return createMessage(message, buttons);
};

exports.subList = (ctx, museum, paginationData, baseMuseumId, baseMuseumPage) => {
    const message = `<b>${museum.name}</b>\n\n${museum.description}`;
    const paginator = simplePaginator(Actions.museumSubList, paginationData, [baseMuseumId, baseMuseumPage]);
    const buttons = [
        [Markup.callbackButton("‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –ì–ª–∞–≤–Ω–æ–º—É", Actions.museumList.callback(baseMuseumPage))],
        [Markup.callbackButton("üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ", "4"), Markup.callbackButton("üñºÔ∏è –§–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏", "3")],
        [Markup.callbackButton("üíµ –°—Ç–æ–∏–º–æ—Å—Ç—å", "5"), Markup.callbackButton("‚è±Ô∏è –ß–∞—Å—ã —Ä–∞–±–æ—Ç—ã", "1")],
        [Markup.callbackButton("üåê –ö–∞–∫ –¥–æ–±—Ä–∞—Ç—å—Å—è?", Actions.museumAddress.callback(museum.id))],
        [
            paginator.backButton,
            Markup.callbackButton(`${paginationData.page} –∏–∑ ${paginationData.count}`, "2"),
            paginator.nextButton,
        ],
    ];

    return createMessage(message, buttons);
};